.env
.idea/

test.py

# Migrations #

# A common question is: “why aren’t we ignoring migrations?”.
# Wouldn’t it make sense to create the migrations on the server and then migrate them right away?
# Yes, in some cases that would make sense, but there is a big issue with that.
# You will always want to have the same migrations on your development machine as on the server.
# Imagine this: you want a field to be False for every record.
# You create a new field with default=False, in this case all fields are fields.
# Then you decide to change the field and change the default to True.
# The current fields are still marked as False since you ran that migration first.
# If you wouldn’t commit the migration files, all fields would be True since the production server wouldn’t know
# that it was False previously.

# Next to that, Django recommends including migration files as they are part of the code base:
# The migration files for each app live in a “migrations” directory inside of that app,
# and are designed to be committed to, and distributed as part of, its codebase.
# You should be making them once on your development machine and then running the same migrations on your colleagues’
# machines, your staging machines, and eventually your production machines.

#**/migrations/**
#!**/migrations
#!**/migrations/__init__.py

# Source #
.pyc files

# Python will always compile your code to byte code.
# This is saved in the .pyc files. You can’t do much with that and we don’t need it, python will create them anyway.
# It’s best to just ignore them through .gitignore.

# Django #
local_settings.py
*.log
*.pot
*.pyc
*.mo
*.DS_Store
*.sqlite3
*.db
*.pid
media/
static/

# Backup files #
*.bak

# PyCharm #
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff:
.idea/workspace.xml
.idea/tasks.xml
.idea/dictionaries
.idea/vcs.xml
.idea/jsLibraryMappings.xml

# Sensitive or high-churn files:
.idea/dataSources.ids
.idea/dataSources.xml
.idea/dataSources.local.xml
.idea/sqlDataSources.xml
.idea/dynamic.xml
.idea/uiDesigner.xml
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.xml
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/gradle.xml
.idea/**/libraries
*.iws /out/

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
.idea/artifacts
.idea/compiler.xml
.idea/jarRepositories.xml
.idea/modules.xml
.idea/*.iml
.idea/modules
*.iml
*.ipr

# Gradle:
.idea/gradle.xml
.idea/libraries

# Mongo Explorer plugin:
.idea/mongoSettings.xml

## File-based project format:
*.iws

## Plugin-specific files:

# IntelliJ
/out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

# Python #
*.py[cod]
*$py.class
__pycache__

# C extensions
*.so

# Distribution / packaging
.Python build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
.pytest_cache/
nosetests.xml
coverage.xml
*.cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery
celerybeat-schedule.*

# SageMath parsed files
*.sage.py

# Environments
iwebproject/settings/.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# mkdocs documentation
/site

# mypy
.mypy_cache/

# Sublime Text #
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache
*.sublime-workspace
*.sublime-project

# sftp configuration file
sftp-config.json

# Package control specific files Package
Control.last-run
Control.ca-list
Control.ca-bundle
Control.system-ca-bundle
GitHub.sublime-settings

# Visual Studio Code #
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
.history

# pgadmin
/pgadmin

# postgres
/pgdata

# SSL Serts
*.pem
*.key

# my bash script
restart.bash